{"ast":null,"code":"const BASE = \"/api\"; // proxy'd to FastAPI\n\n// ✅ Upload resume file\nexport const uploadResume = async file => {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  const res = await fetch(`${BASE}/upload-resume`, {\n    method: \"POST\",\n    body: formData\n  });\n  return res.json();\n};\n\n// ✅ Generate AI-based resume (returns DOCX blob)\nexport const generateResume = async (name, job_description) => {\n  const res = await fetch(`${BASE}/generate-resume`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      name,\n      job_description\n    })\n  });\n  return res.blob(); // Will be streamed as .docx\n};\n\n// ✅ Download resume in PDF\nexport const downloadPDF = async (resumeText, fileName = \"AI_Resume\") => {\n  const res = await fetch(`${BASE}/download-pdf`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      resume_text: resumeText,\n      file_name: fileName\n    })\n  });\n  return res.blob();\n};\n\n// ✅ Download resume in DOCX\nexport const downloadDOCX = async (resumeText, fileName = \"AI_Resume\") => {\n  const res = await fetch(`${BASE}/download-docx`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      resume_text: resumeText,\n      file_name: fileName\n    })\n  });\n  return res.blob();\n};","map":{"version":3,"names":["BASE","uploadResume","file","formData","FormData","append","res","fetch","method","body","json","generateResume","name","job_description","headers","JSON","stringify","blob","downloadPDF","resumeText","fileName","resume_text","file_name","downloadDOCX"],"sources":["/Users/TONY/Desktop/career_ai_project/ui/src/utils/api.js"],"sourcesContent":["const BASE = \"/api\";  // proxy'd to FastAPI\n\n// ✅ Upload resume file\nexport const uploadResume = async (file) => {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n\n  const res = await fetch(`${BASE}/upload-resume`, {\n    method: \"POST\",\n    body: formData,\n  });\n  return res.json();\n};\n\n// ✅ Generate AI-based resume (returns DOCX blob)\nexport const generateResume = async (name, job_description) => {\n  const res = await fetch(`${BASE}/generate-resume`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ name, job_description }),\n  });\n  return res.blob(); // Will be streamed as .docx\n};\n\n// ✅ Download resume in PDF\nexport const downloadPDF = async (resumeText, fileName = \"AI_Resume\") => {\n  const res = await fetch(`${BASE}/download-pdf`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ resume_text: resumeText, file_name: fileName }),\n  });\n  return res.blob();\n};\n\n// ✅ Download resume in DOCX\nexport const downloadDOCX = async (resumeText, fileName = \"AI_Resume\") => {\n  const res = await fetch(`${BASE}/download-docx`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ resume_text: resumeText, file_name: fileName }),\n  });\n  return res.blob();\n};\n"],"mappings":"AAAA,MAAMA,IAAI,GAAG,MAAM,CAAC,CAAE;;AAEtB;AACA,OAAO,MAAMC,YAAY,GAAG,MAAOC,IAAI,IAAK;EAC1C,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;EAE7B,MAAMI,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGP,IAAI,gBAAgB,EAAE;IAC/CQ,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEN;EACR,CAAC,CAAC;EACF,OAAOG,GAAG,CAACI,IAAI,CAAC,CAAC;AACnB,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAOC,IAAI,EAAEC,eAAe,KAAK;EAC7D,MAAMP,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGP,IAAI,kBAAkB,EAAE;IACjDQ,MAAM,EAAE,MAAM;IACdM,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CL,IAAI,EAAEM,IAAI,CAACC,SAAS,CAAC;MAAEJ,IAAI;MAAEC;IAAgB,CAAC;EAChD,CAAC,CAAC;EACF,OAAOP,GAAG,CAACW,IAAI,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC;;AAED;AACA,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAOC,UAAU,EAAEC,QAAQ,GAAG,WAAW,KAAK;EACvE,MAAMd,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGP,IAAI,eAAe,EAAE;IAC9CQ,MAAM,EAAE,MAAM;IACdM,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CL,IAAI,EAAEM,IAAI,CAACC,SAAS,CAAC;MAAEK,WAAW,EAAEF,UAAU;MAAEG,SAAS,EAAEF;IAAS,CAAC;EACvE,CAAC,CAAC;EACF,OAAOd,GAAG,CAACW,IAAI,CAAC,CAAC;AACnB,CAAC;;AAED;AACA,OAAO,MAAMM,YAAY,GAAG,MAAAA,CAAOJ,UAAU,EAAEC,QAAQ,GAAG,WAAW,KAAK;EACxE,MAAMd,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGP,IAAI,gBAAgB,EAAE;IAC/CQ,MAAM,EAAE,MAAM;IACdM,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CL,IAAI,EAAEM,IAAI,CAACC,SAAS,CAAC;MAAEK,WAAW,EAAEF,UAAU;MAAEG,SAAS,EAAEF;IAAS,CAAC;EACvE,CAAC,CAAC;EACF,OAAOd,GAAG,CAACW,IAAI,CAAC,CAAC;AACnB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}