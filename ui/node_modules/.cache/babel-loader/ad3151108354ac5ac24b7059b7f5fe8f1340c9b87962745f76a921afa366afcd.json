{"ast":null,"code":"var _jsxFileName = \"/Users/TONY/Desktop/career_ai_project/ui/src/pages/RecommendedJobs.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Sidebar from \"../components/Sidebar\";\nimport JobCard from \"../components/JobCard\";\nimport UserDropdown from \"../components/UserDropdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RecommendedJobs() {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const resumeText = localStorage.getItem(\"resumeText\");\n  useEffect(() => {\n    const fetchJobs = async () => {\n      try {\n        const res = await fetch(\"/api/jobs\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            resume: resumeText || \"\"\n          })\n        });\n        const data = await res.json();\n        if (Array.isArray(data.jobs)) {\n          setJobs(data.jobs);\n        } else {\n          console.error(\"Invalid jobs format:\", data);\n        }\n      } catch (error) {\n        console.error(\"Failed to fetch jobs:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchJobs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      active: \"recommended-jobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex-1 p-8 overflow-y-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold text-gray-800\",\n          children: \"Recommended Jobs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UserDropdown, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"Loading jobs...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this) : jobs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"No jobs found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid gap-4\",\n        children: jobs.map((job, index) => /*#__PURE__*/_jsxDEV(JobCard, {\n          title: job.title,\n          company: job.company,\n          location: job.location,\n          salary: job.salary || \"Not specified\",\n          match: `${job.match_percentage || \"0\"}% Match`,\n          posted: job.posted || \"Recently\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(RecommendedJobs, \"xAXs/kqjedBdxYZ+TLlF70OyTQI=\");\n_c = RecommendedJobs;\nvar _c;\n$RefreshReg$(_c, \"RecommendedJobs\");","map":{"version":3,"names":["React","useEffect","useState","Sidebar","JobCard","UserDropdown","jsxDEV","_jsxDEV","RecommendedJobs","_s","jobs","setJobs","loading","setLoading","resumeText","localStorage","getItem","fetchJobs","res","fetch","method","headers","body","JSON","stringify","resume","data","json","Array","isArray","console","error","className","children","active","fileName","_jsxFileName","lineNumber","columnNumber","length","map","job","index","title","company","location","salary","match","match_percentage","posted","_c","$RefreshReg$"],"sources":["/Users/TONY/Desktop/career_ai_project/ui/src/pages/RecommendedJobs.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport JobCard from \"../components/JobCard\";\r\nimport UserDropdown from \"../components/UserDropdown\";\r\n\r\nexport default function RecommendedJobs() {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const resumeText = localStorage.getItem(\"resumeText\");\r\n\r\n  useEffect(() => {\r\n    const fetchJobs = async () => {\r\n      try {\r\n        const res = await fetch(\"/api/jobs\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ resume: resumeText || \"\" }),\r\n        });\r\n\r\n        const data = await res.json();\r\n        if (Array.isArray(data.jobs)) {\r\n          setJobs(data.jobs);\r\n        } else {\r\n          console.error(\"Invalid jobs format:\", data);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch jobs:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchJobs();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flex h-screen bg-gray-100\">\r\n      <Sidebar active=\"recommended-jobs\" />\r\n\r\n      <main className=\"flex-1 p-8 overflow-y-auto\">\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <h1 className=\"text-2xl font-bold text-gray-800\">Recommended Jobs</h1>\r\n          <UserDropdown />\r\n        </div>\r\n\r\n        {loading ? (\r\n          <p className=\"text-gray-600\">Loading jobs...</p>\r\n        ) : jobs.length === 0 ? (\r\n          <p className=\"text-gray-600\">No jobs found.</p>\r\n        ) : (\r\n          <div className=\"grid gap-4\">\r\n            {jobs.map((job, index) => (\r\n              <JobCard\r\n                key={index}\r\n                title={job.title}\r\n                company={job.company}\r\n                location={job.location}\r\n                salary={job.salary || \"Not specified\"}\r\n                match={`${job.match_percentage || \"0\"}% Match`}\r\n                posted={job.posted || \"Recently\"}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}