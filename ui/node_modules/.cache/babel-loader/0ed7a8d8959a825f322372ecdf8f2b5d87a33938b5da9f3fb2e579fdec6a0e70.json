{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rakes\\\\Downloads\\\\launchhire-working\\\\launchhire-working\\\\src\\\\pages\\\\AIInterviewPractice.js\";\nimport React from 'react';\nimport Sidebar from '../components/Sidebar';\nimport InterviewCard from '../components/InterviewCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst interviewRounds = [{\n  title: \"Coding Round\",\n  type: \"Online\",\n  interviewer: \"Jhon\",\n  goal: \"Assess data structures and algorithms proficiency.\",\n  format: \"2–3 coding questions on HackerRank or CodeSignal.\",\n  skills: [\"Arrays\", \"Strings\", \"Hashmap\", \"Graphs\", \"DP\", \"Greedy\"]\n}, {\n  title: \"System Design Round\",\n  type: \"Offline\",\n  interviewer: \"Samantha\",\n  goal: \"Test ability to design scalable systems.\",\n  format: \"LLD: Classes & APIs, HLD: Architecture & scaling.\",\n  skills: [\"Design Thinking\", \"APIs\", \"Load Balancing\", \"Modularity\"]\n}, {\n  title: \"Behavioral / HR Round\",\n  type: \"Online\",\n  interviewer: \"Ben\",\n  goal: \"Assess culture fit and communication.\",\n  format: \"STAR method: Situation, Task, Action, Result.\",\n  skills: [\"Leadership\", \"Conflict Resolution\", \"Teamwork\"]\n}];\nexport default function AIInterviewPractice() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      active: \"interview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex-1 p-8 overflow-y-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold text-gray-800\",\n          children: \"Recommended AI Interviews\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-500\",\n          children: \"Vamshi Sai Awaru \\u25BC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid gap-6\",\n        children: interviewRounds.map((round, index) => /*#__PURE__*/_jsxDEV(InterviewCard, {\n          ...round\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_c = AIInterviewPractice;\nvar _c;\n$RefreshReg$(_c, \"AIInterviewPractice\");","map":{"version":3,"names":["React","Sidebar","InterviewCard","jsxDEV","_jsxDEV","interviewRounds","title","type","interviewer","goal","format","skills","AIInterviewPractice","className","children","active","fileName","_jsxFileName","lineNumber","columnNumber","map","round","index","_c","$RefreshReg$"],"sources":["C:/Users/rakes/Downloads/launchhire-working/launchhire-working/src/pages/AIInterviewPractice.js"],"sourcesContent":["import React from 'react';\r\nimport Sidebar from '../components/Sidebar';\r\nimport InterviewCard from '../components/InterviewCard';\r\n\r\nconst interviewRounds = [\r\n  {\r\n    title: \"Coding Round\",\r\n    type: \"Online\",\r\n    interviewer: \"Jhon\",\r\n    goal: \"Assess data structures and algorithms proficiency.\",\r\n    format: \"2–3 coding questions on HackerRank or CodeSignal.\",\r\n    skills: [\"Arrays\", \"Strings\", \"Hashmap\", \"Graphs\", \"DP\", \"Greedy\"],\r\n  },\r\n  {\r\n    title: \"System Design Round\",\r\n    type: \"Offline\",\r\n    interviewer: \"Samantha\",\r\n    goal: \"Test ability to design scalable systems.\",\r\n    format: \"LLD: Classes & APIs, HLD: Architecture & scaling.\",\r\n    skills: [\"Design Thinking\", \"APIs\", \"Load Balancing\", \"Modularity\"],\r\n  },\r\n  {\r\n    title: \"Behavioral / HR Round\",\r\n    type: \"Online\",\r\n    interviewer: \"Ben\",\r\n    goal: \"Assess culture fit and communication.\",\r\n    format: \"STAR method: Situation, Task, Action, Result.\",\r\n    skills: [\"Leadership\", \"Conflict Resolution\", \"Teamwork\"],\r\n  },\r\n];\r\n\r\nexport default function AIInterviewPractice() {\r\n  return (\r\n    <div className=\"flex h-screen bg-gray-100\">\r\n      <Sidebar active=\"interview\" />\r\n\r\n      <main className=\"flex-1 p-8 overflow-y-auto\">\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <h1 className=\"text-2xl font-bold text-gray-800\">Recommended AI Interviews</h1>\r\n          <div className=\"text-sm text-gray-500\">Vamshi Sai Awaru ▼</div>\r\n        </div>\r\n\r\n        <div className=\"grid gap-6\">\r\n          {interviewRounds.map((round, index) => (\r\n            <InterviewCard key={index} {...round} />\r\n          ))}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,aAAa,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,eAAe,GAAG,CACtB;EACEC,KAAK,EAAE,cAAc;EACrBC,IAAI,EAAE,QAAQ;EACdC,WAAW,EAAE,MAAM;EACnBC,IAAI,EAAE,oDAAoD;EAC1DC,MAAM,EAAE,mDAAmD;EAC3DC,MAAM,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ;AACnE,CAAC,EACD;EACEL,KAAK,EAAE,qBAAqB;EAC5BC,IAAI,EAAE,SAAS;EACfC,WAAW,EAAE,UAAU;EACvBC,IAAI,EAAE,0CAA0C;EAChDC,MAAM,EAAE,mDAAmD;EAC3DC,MAAM,EAAE,CAAC,iBAAiB,EAAE,MAAM,EAAE,gBAAgB,EAAE,YAAY;AACpE,CAAC,EACD;EACEL,KAAK,EAAE,uBAAuB;EAC9BC,IAAI,EAAE,QAAQ;EACdC,WAAW,EAAE,KAAK;EAClBC,IAAI,EAAE,uCAAuC;EAC7CC,MAAM,EAAE,+CAA+C;EACvDC,MAAM,EAAE,CAAC,YAAY,EAAE,qBAAqB,EAAE,UAAU;AAC1D,CAAC,CACF;AAED,eAAe,SAASC,mBAAmBA,CAAA,EAAG;EAC5C,oBACER,OAAA;IAAKS,SAAS,EAAC,2BAA2B;IAAAC,QAAA,gBACxCV,OAAA,CAACH,OAAO;MAACc,MAAM,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE9Bf,OAAA;MAAMS,SAAS,EAAC,4BAA4B;MAAAC,QAAA,gBAC1CV,OAAA;QAAKS,SAAS,EAAC,wCAAwC;QAAAC,QAAA,gBACrDV,OAAA;UAAIS,SAAS,EAAC,kCAAkC;UAAAC,QAAA,EAAC;QAAyB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/Ef,OAAA;UAAKS,SAAS,EAAC,uBAAuB;UAAAC,QAAA,EAAC;QAAkB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC,eAENf,OAAA;QAAKS,SAAS,EAAC,YAAY;QAAAC,QAAA,EACxBT,eAAe,CAACe,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAChClB,OAAA,CAACF,aAAa;UAAA,GAAiBmB;QAAK,GAAhBC,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CACxC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACI,EAAA,GAnBuBX,mBAAmB;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}